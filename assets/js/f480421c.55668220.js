"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[4539],{7453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"TWF/AI","title":"Apply Consent","description":"The applyIdentity Logic processes the submission of identity verification documents by validating the uploaded files and types, retrieving the related application, and ensuring identity info hasn\u2019t already been completed. It then saves the identity images and updates the LINE rich menu.","source":"@site/versioned_docs/version-1.0.0/TWF/AI.md","sourceDirName":"TWF","slug":"/TWF/AI","permalink":"/docs-setup/docs/TWF/AI","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0.0/TWF/AI.md","tags":[],"version":"1.0.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Apply Consent","permalink":"/docs-setup/docs/TWF/AC"},"next":{"title":"Apply Koza","permalink":"/docs-setup/docs/TWF/AK"}}');var i=n(4848),o=n(8453);const r={sidebar_position:2},a="Apply Consent",d={},c=[];function p(e){const t={h1:"h1",header:"header",mermaid:"mermaid",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"apply-consent",children:"Apply Consent"})}),"\n",(0,i.jsx)(t.p,{children:"The applyIdentity Logic processes the submission of identity verification documents by validating the uploaded files and types, retrieving the related application, and ensuring identity info hasn\u2019t already been completed. It then saves the identity images and updates the LINE rich menu."}),"\n",(0,i.jsx)(t.mermaid,{value:'flowchart TD\n    Start(["Start"]) --\x3e  FetchApp["Fetch Application with<br/> Identity info"]\n    FetchApp --\x3e ValidApp{"Does the application <br/>exists & Identity info <br/>not filled?"}\n    ValidApp -- No --\x3e Error1["Error"]\n    %% ValidApp -- Yes --\x3e ValidatePics{"identity1Pic<br/>is valid?"}\n    %% ValidatePics -- No --\x3e Error2["Throw Error:<br/>identity Pic missing"]\n    ValidApp -- Yes --\x3e ApplyIdentity["Apply identity info<br/>+ upload pictures"]\n    ApplyIdentity --\x3e UpdateMenu["Update Richmenu<br/>for Application"]\n    %% UpdateMenu --\x3e Commit["Commit Transaction"]\n    %% Commit --\x3e Emit["Emit Application<br/>Update Event"]\n    %% Emit --\x3e Success["Send Success Response"]\n    UpdateMenu --\x3e End(["End"])\n\n    Error1 --\x3e End\n    %% Error2 --\x3e End\n\n    Start:::startend\n    %% CheckFiles:::process\n    %% StartTx:::process\n    FetchApp:::process\n    ValidApp:::decision\n    Error1:::error\n    %% ValidatePics:::decision\n    %% Error2:::error\n    ApplyIdentity:::process\n    UpdateMenu:::process\n    %% Commit:::process\n    %% Emit:::process\n    %% Success:::success\n    End:::startend\n\n    classDef startend fill:#76c7c0,stroke:#333,stroke-width:2px,color:#fff,font-weight:bold\n    classDef process fill:#6fa8dc,stroke:#333,stroke-width:1.5px,color:#222,font-weight:bold\n    classDef decision fill:#ffb347,stroke:#333,stroke-width:2px,color:#333,font-weight:bold\n    classDef error fill:#f44336,stroke:#900,stroke-width:2px,color:#fff,font-weight:bold\n    classDef success fill:#4caf50,stroke:#256a2e,stroke-width:2px,color:#fff,font-weight:bold\n\n\n\n'})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);